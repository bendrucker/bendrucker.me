name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

# Global permissions removed - set at job level instead

concurrency:
  group: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || 'pages' }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build site
        uses: withastro/action@v3

  deploy:
    if: github.event_name == 'push' && contains(fromJson('["main", "master"]'), github.ref_name)
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  lighthouse:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build site
        run: npm run build

      - name: Start preview server
        run: npm run preview &
        env:
          HOST: 0.0.0.0
          PORT: 4321

      - name: Wait for server
        uses: iFaxity/wait-on-action@v1
        with:
          resource: http://localhost:4321
          timeout: 30000

      - name: Run Lighthouse CI
        run: npm run lighthouse
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Generate job summary
        if: always()
        run: |
          if [ -f .lighthouseci/manifest.json ]; then
            cat << 'EOF' >> $GITHUB_STEP_SUMMARY
          ## Lighthouse Performance Results

          | URL | Performance | Accessibility | Best Practices | SEO |
          |-----|-------------|---------------|----------------|-----|
          EOF

            node -pe "
              require('./.lighthouseci/manifest.json')
                .filter(r => r.isRepresentativeRun)
                .map(r => {
                  const s = r.summary;
                  const url = r.url.replace('http://localhost:4321', '') || '/';
                  return \`| \${url} | \${Math.round(s.performance*100)}% | \${Math.round(s.accessibility*100)}% | \${Math.round(s['best-practices']*100)}% | \${Math.round(s.seo*100)}% |\`;
                }).join('\\n')
            " >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload Lighthouse results
        if: always() && github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: .lighthouseci
          retention-days: 1
