name: Deploy

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

concurrency:
  group: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || 'pages' }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

permissions:
  contents: read
  deployments: write

jobs:
  cloudflare:
    name: ${{ matrix.name }}
    if: (github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref_name == github.event.repository.default_branch)) && github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      deployments: write
    outputs:
      www-preview-url: ${{ steps.set-outputs.outputs.www-preview-url }}
    strategy:
      matrix:
        include:
          - name: www
            path: .
          - name: github
            path: workers/github
          - name: strava
            path: workers/strava

    steps:
      - name: "☁️ Checkout repository"
        uses: actions/checkout@v5

      - name: "📦 Setup Node.js"
        uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: "npm"

      - name: "📦 Install dependencies"
        run: npm ci

      - name: "🔧 Build shared packages"
        run: npm run build --workspaces

      - name: "🏗️ Build main site"
        if: matrix.path == '.'
        run: npm run build

      - name: "📋 Copy assets ignore file"
        if: matrix.path == '.'
        run: cp .assetsignore dist/

      - name: "📍 Start deployment"
        id: deployment
        uses: bobheadxi/deployments@v1
        with:
          step: start
          token: ${{ github.token }}
          ref: ${{ github.head_ref || github.ref_name }}
          env: ${{ github.event_name == 'pull_request' && format('pr-{0}-{1}', github.event.number, matrix.name) || format('{0}-production', matrix.name) }}
          desc: ${{ github.event_name == 'pull_request' && format('Preview deployment for PR {0} - {1}', github.event.number, matrix.name) || format('Production deployment for {0}', matrix.name) }}

      - name: "🌐 Deploy to Cloudflare"
        id: wrangler
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: ${{ matrix.path }}
          command: ${{ github.event_name == 'pull_request' && format('versions upload --tag PR-{0} --message "Preview for PR {0} - {1}" --preview-alias pr-{0}-{2}', github.event.number, github.event.pull_request.html_url, matrix.name) || 'deploy' }}
          gitHubToken: ${{ github.token }}

      - name: "🔗 Construct preview URL"
        id: extract-url
        if: github.event_name == 'pull_request' && matrix.path == '.'
        run: |
          # Extract worker name from wrangler.toml
          WORKER_NAME=$(grep -m1 "^name" wrangler.toml | sed 's/.*"\(.*\)".*/\1/')
          # Replace underscores with hyphens for subdomain (Cloudflare convention)
          SUBDOMAIN=$(echo "$WORKER_NAME" | tr '_' '-')
          # Construct the preview alias URL
          ALIAS_URL="https://pr-${{ github.event.number }}-${{ matrix.name }}.${SUBDOMAIN}.workers.dev"
          echo "alias-url=$ALIAS_URL" >> $GITHUB_OUTPUT
          echo "Preview URL: $ALIAS_URL"

      - name: "🔗 Extract deployment URL"
        id: extract-deployment-url
        if: github.event_name == 'push' && matrix.path == '.'
        run: |
          # Extract the custom domain from deployment-url and format as proper URL
          DEPLOYMENT_URL=$(echo "${{ steps.wrangler.outputs.deployment-url }}" | sed 's/ (custom domain)//' | sed 's/^/https:\/\//')
          echo "formatted-url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT

      - name: "📍 Finish deployment"
        if: always() && steps.deployment.outcome == 'success'
        uses: bobheadxi/deployments@v1
        with:
          step: finish
          token: ${{ github.token }}
          ref: ${{ github.head_ref || github.ref_name }}
          status: ${{ steps.wrangler.outcome == 'success' && 'success' || 'failure' }}
          env: ${{ steps.deployment.outputs.env }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{ github.event_name == 'pull_request' && matrix.path == '.' && steps.extract-url.outputs.alias-url || (matrix.path == '.' && steps.extract-deployment-url.outputs.formatted-url || steps.wrangler.outputs.deployment-url) }}

      - name: "📤 Set job outputs"
        id: set-outputs
        if: matrix.name == 'www' && github.event_name == 'pull_request'
        run: |
          echo "www-preview-url=${{ steps.extract-url.outputs.alias-url }}" >> $GITHUB_OUTPUT

  lighthouse:
    # Workaround for https://github.com/cloudflare/workers-sdk/issues/9022
    # wrangler dev fails with "import.meta.url is undefined" when using content collections
    # Once fixed, revert to testing against local wrangler dev server
    needs: cloudflare
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Get preview URL
        id: preview-url
        run: |
          # Extract the preview URL from the deployment
          URL="${{ needs.cloudflare.outputs.www-preview-url }}"
          if [ -z "$URL" ]; then
            echo "No preview URL found, skipping Lighthouse"
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "url=$URL" >> $GITHUB_OUTPUT
            echo "Testing Lighthouse against: $URL"
          fi

      - name: Run Lighthouse CI
        if: steps.preview-url.outputs.skip != 'true'
        run: npx @lhci/cli@0.15.x autorun --collect.url=${{ steps.preview-url.outputs.url }}
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
