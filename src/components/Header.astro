---
import Hr from "./Hr.astro";
import IconX from "@/assets/icons/IconX.svg";
import IconMoon from "@/assets/icons/IconMoon.svg";
import IconArchive from "@/assets/icons/IconArchive.svg";
import IconSunHigh from "@/assets/icons/IconSunHigh.svg";
import IconMenuDeep from "@/assets/icons/IconMenuDeep.svg";
import LinkButton from "./LinkButton.astro";
import { SITE } from "@/config";

const { pathname } = Astro.url;

// Remove trailing slash from current pathname if exists
const currentPath =
  pathname.endsWith("/") && pathname !== "/" ? pathname.slice(0, -1) : pathname;

const isActive = (path: string) => {
  const currentPathArray = currentPath.split("/").filter(p => p.trim());
  const pathArray = path.split("/").filter(p => p.trim());

  return currentPath === path || currentPathArray[0] === pathArray[0];
};
---

<header x-data="{
  mobileMenuOpen: false,
  theme: $persist('auto'),
  init() {
    this.updateTheme();
  },
  toggleMobileMenu() {
    this.mobileMenuOpen = !this.mobileMenuOpen;
  },
  toggleTheme() {
    this.theme = this.theme === 'light' ? 'dark' : 'light';
    this.updateTheme();
  },
  updateTheme() {
    if (this.theme === 'light' || (this.theme === 'auto' && !window.matchMedia('(prefers-color-scheme: dark)').matches)) {
      document.documentElement.removeAttribute('data-theme');
    } else {
      document.documentElement.setAttribute('data-theme', 'dark');
    }
  }
}">
  <a
    id="skip-to-content"
    href="#main-content"
    class="absolute start-16 -top-full z-50 bg-background px-3 py-2 text-accent backdrop-blur-lg transition-all focus:top-4"
  >
    Skip to content
  </a>
  <div
    id="nav-container"
    class="mx-auto flex max-w-app flex-col items-center justify-between sm:flex-row"
  >
    <div
      id="top-nav-wrap"
      class="relative flex w-full items-baseline justify-between bg-background p-4 sm:items-center sm:py-6"
    >
      <a
        href="/"
        class="absolute py-1 text-xl leading-8 font-semibold whitespace-nowrap sm:static sm:my-auto sm:text-2xl sm:leading-none"
      >
        {SITE.title}
      </a>
      <nav
        id="nav-menu"
        class="flex w-full flex-col items-center sm:ms-2 sm:flex-row sm:justify-end sm:space-x-4 sm:py-0"
      >
        <button
          @click="toggleMobileMenu()"
          class="focus-outline self-end p-2 sm:hidden"
          :aria-label="mobileMenuOpen ? 'Close Menu' : 'Open Menu'"
          :aria-expanded="mobileMenuOpen"
          aria-controls="menu-items"
        >
          <IconX :class="{ 'hidden': !mobileMenuOpen }" />
          <IconMenuDeep :class="{ 'hidden': mobileMenuOpen }" />
        </button>
        <ul
          id="menu-items"
          :class="{
            'hidden': !mobileMenuOpen,
            'mt-4 grid w-44 grid-cols-2 place-content-center gap-2': true,
            '[&>li>a]:block [&>li>a]:px-4 [&>li>a]:py-3 [&>li>a]:text-center [&>li>a]:font-medium [&>li>a]:hover:text-accent sm:[&>li>a]:px-2 sm:[&>li>a]:py-1': true,
            'sm:mt-0 sm:flex sm:w-auto sm:gap-x-5 sm:gap-y-0': true
          }"
        >
          <li class="col-span-2">
            <a href="/about" class:list={{ "active-nav": isActive("/about") }}>
              About
            </a>
          </li>
          {
            SITE.showArchives && (
              <li class="col-span-2">
                <LinkButton
                  href="/archives"
                  class:list={[
                    "focus-outline flex justify-center p-3 sm:p-1",
                    {
                      "active-nav [&>svg]:stroke-accent": isActive("/archives"),
                    },
                  ]}
                  ariaLabel="archives"
                  title="Archives"
                >
                  <IconArchive class="hidden sm:inline-block" />
                  <span class="sm:sr-only">Archives</span>
                </LinkButton>
              </li>
            )
          }
          {
            SITE.lightAndDarkMode && (
              <li class="col-span-2 flex items-center justify-center">
                <button
                  @click="toggleTheme()"
                  class="focus-outline relative size-12 p-4 sm:size-8 hover:[&>svg]:stroke-accent"
                  title="Toggles light & dark"
                  :aria-label="theme"
                  aria-live="polite"
                >
                  <IconMoon class="absolute top-[50%] left-[50%] -translate-[50%] scale-100 rotate-0 transition-all dark:scale-0 dark:-rotate-90" />
                  <IconSunHigh class="absolute top-[50%] left-[50%] -translate-[50%] scale-0 rotate-90 transition-all dark:scale-100 dark:rotate-0" />
                </button>
              </li>
            )
          }
        </ul>
      </nav>
    </div>
  </div>
  <Hr />
</header>

